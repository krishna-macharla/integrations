---
description: Pipeline for processing beyondinsight and password safe user audits 
processors:
  - rename:
      field: message
      target_field: beyondinsight_password_safe.useraudit

  - fingerprint:
      fields:
        - beyondinsight_password_safe.useraudit.AuditID
      target_field: "_id"

##################### Scripts for processing input #####################
  - script:
      description: Drops null/empty values recursively.
      lang: painless
      source: |
        boolean dropEmptyFields(Object object) {
          if (object == null || object == "") {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(value -> dropEmptyFields(value));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(value -> dropEmptyFields(value));
            return (((List) object).length == 0);
          }
          return false;
        }
        dropEmptyFields(ctx);

  - script:
      description: Convert Additional Info keys to snake case.
      tag: additional-info-keys-to-snake-case
      lang: painless
      source: |
        Map keysToSnakeCase(Map m) {
          def regex = /_?([a-z])([A-Z]+)/;
          def snakeCaseMap = [:];

          for (entry in m.entrySet()) {
            def k = entry.getKey();
            def v = entry.getValue();

            if (v instanceof Map) {
              v = keysToSnakeCase(v);
            } else if (v instanceof List) {
              for (int i = 0; i < v.size(); i++) {
                def item = v.get(i);
                if (item instanceof Map) {
                  v.set(i, keysToSnakeCase(item));
                }
              }
            }

            k = regex.matcher(k).replaceAll('$1_$2').toLowerCase();
            snakeCaseMap.put(k, v);
          }
          return snakeCaseMap;
        }

        if (ctx.beyondinsight_password_safe.useraudit != null) {
          ctx.beyondinsight_password_safe.useraudit = keysToSnakeCase(ctx.beyondinsight_password_safe.useraudit);
        }

##################### ECS Fields #####################
  - set:
      field: ecs.version
      value: '8.11.0'

  - set:
      field: event.kind
      value: event

  - append:
      field: event.category
      value: iam

  - append:
      field: event.type
      value: info

  - set:
      field: event.dataset
      value: beyondinsight_password_safe.useraudit

  - set:
      field: event.module
      value: beyondinsight_password_safe

  - set:
      field: event.id
      value: "{{{beyondinsight_password_safe.useraudit.audit_id}}}"
      ignore_empty_value: true

  - set:
      field: user.id
      value: "{{{beyondinsight_password_safe.useraudit.user_id}}}"
      ignore_empty_value: true
  - set:
      field: user.name
      value: "{{{beyondinsight_password_safe.useraudit.user_name}}}"
      ignore_empty_value: true           

 ###################### Override host.ip ######################
  - convert:
      field: beyondinsight_password_safe.useraudit.ipaddress
      target_field: beyondinsight_password_safe.useraudit.ipaddress
      type: ip
      ignore_missing: true
      if: ctx.beyondinsight_password_safe.useraudit?.ipaddress != null && ctx.beyondinsight_password_safe.useraudit.ipaddress != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: source.ip
      copy_from: beyondinsight_password_safe.useraudit.ipaddress
      ignore_empty_value: true
  - geoip:
      field: source.ip
      target_field: source.geo
      tag: geoip_source_ip
      ignore_missing: true
################### Set @timestamp ##########################
  - date:
     field: "beyondinsight_password_safe.useraudit.create_date"
     target_field: "@timestamp"
     formats: ["ISO8601"]
 ################### User Audit Log fields ###################
  - rename:
      field: "beyondinsight_password_safe.useraudit.user"
      target_field: "user.name"
      ignore_missing: true

on_failure:
  - append:
      field: error.message
      value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      value: pipeline_error