config_version: 2
interval: {{interval}}
{{#if enable_request_tracer}}
resource.tracer.filename: "../../logs/cel/http-request-trace-*.ndjson"
request.tracer.maxbackups: 5
{{/if}}
{{#if proxy_url}}
resource.proxy_url: {{proxy_url}}
{{/if}}
{{#if ssl}}
resource.ssl: {{ssl}}
{{/if}}
{{#if http_client_timeout}}
resource.timeout: {{http_client_timeout}}
{{/if}}
resource.ssl.renegotiation: "freely"
resource.ssl.verification_mode: "certificate"
resource.url: {{url}}
state:

  want_more: false
  offset: 0
  initial_interval: {{initial_interval}}
  limit: {{limit}}
  apikeytoken: {{apikeytoken}}
  password: {{password}}
  username: {{username}}
redact:
  fields:
    - apikey
program: |-

  (
  	(!has(state.cursor) || has(state.cursor) && has(state.cursor.auth_cookie) && state.cursor.auth_cookie == null) ?
  		// Authenticating using API to retrieve auth Cookie
  		request("POST", state.url + "/Auth/SignAppin").with(
  			{
  				"Header": {
  					"Authorization": [
  						string("PS-Auth key=" + state.apikeytoken + ";runas=" + state.username + ";pwd=[" + state.password + "];"),
  					],
  					"Content-Type": ["application/json"],
  				},
  			}
  		).do_request().as(resp,
  			resp.Header["Set-Cookie"].filter(e, e.contains("ASP.NET_SessionId")).as(auth_cookie,
  				auth_cookie[0]
  			)
  		)
  	:
  		state.cursor.auth_cookie
  ).as(auth_cookie,
  	request(
  		"GET",
  		state.url + "/ManagedAccounts?" + {
  			"limit": [string(state.limit)],
  			"offset": [has(state.?cursor.offset) ? string(state.cursor.offset) : "0"],
  		}.format_query()
  	).with(
  		{
  			"Header": {
  				"Content-Type": ["application/json"],
  				"Cookie": [auth_cookie],
  			},
  		}
  	).do_request().as(resp,
  		bytes(resp.Body).decode_json().as(body,
  			state.with(
  				{
  					"events": body.map(e,
  						{
  							"message": e,
  							?"event.original": state.?preserve_original_event.orValue(false) ? optional.of(e.encode_json()) : optional.none(),
  						}
  					),
                    "want_more": (size(body) > 0) ? true : false,
                    "cursor": {
  						"auth_cookie": auth_cookie,
  						"offset": (has(state.?cursor.offset) ? int(state.cursor.offset) : int(0)) + size(body),
  					},
  				}
  			)
  		)
  	)
  )
tags:
{{#if preserve_original_event}}
  - preserve_original_event
{{/if}}
{{#each tags as |tag|}}
  - {{tag}}
{{/each}}
{{#contains "forwarded" tags}}
publisher_pipeline.disable_host: true
{{/contains}}
{{#if processors}}
processors:
{{processors}}
{{/if}}
